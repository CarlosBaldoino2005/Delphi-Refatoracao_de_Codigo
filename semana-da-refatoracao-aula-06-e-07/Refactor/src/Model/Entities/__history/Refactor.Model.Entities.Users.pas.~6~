unit Refactor.Model.Entities.Users;

interface

type
  TUSERS = class
    private
    FNAME: String;
    FID: Integer;
    function GetNAME: String;
    procedure SetID(const Value: Integer);
    procedure SetNAME(const Value: String);
    public
      function ID ( aValue : Integer ) : TUSERS; overload;
      function ID : Integer; overload;
      function NAME ( aValue : String ) : TUSERS; overload;
      function NAME : String; overload;
  end;

implementation

uses
  System.SysUtils;

{ TUSERS }

function TUSERS.GetNAME: String;
begin
  if Trim(FNAME) = '' then
    raise Exception.Create('Informe o nome do Usuário');

  Result := FNAME;
end;

function TUSERS.ID(aValue: Integer): TUSERS;
begin
  Result := Self;
  FID  := aValue;
end;

function TUSERS.ID: Integer;
begin
  Result := FID;
end;

function TUSERS.NAME(aValue: String): TUSERS;
begin

end;

function TUSERS.NAME: String;
begin

end;

procedure TUSERS.SetID(const Value: Integer);
begin
  FID := Value;
end;

procedure TUSERS.SetNAME(const Value: String);
begin
  FNAME := Value;
end;

end.
